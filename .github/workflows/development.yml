name: Code Review

on: [push]

jobs:
  tests:
    name: code review
    runs-on: ubuntu-latest

    container:
      image: python:3.10-slim-buster
      volumes:
      - /cache/pip:/github/home/.cache/pip

    services:
      redis:
        image: redis:5
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres:12-buster
        env:
          POSTGRES_HOST: 'postgres'
          POSTGRES_DB: 'postgres'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'postgres'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Installing System Depedencies
      run: |
        apt-get update && apt-get install -y build-essential libpq-dev binutils libproj-dev gdal-bin curl
        python -m pip install --upgrade pip

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.5.1
        virtualenvs-create: false
        virtualenvs-in-project: false
        virtualenvs-path: ~/.virtualenvs
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: ~/.virtualenvs
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry config --local installer.no-binary psycopg2
        poetry install --no-interaction
        poetry install --no-interaction --only dev

    - name: Load env vars
      uses: cardinalby/export-env-action@v2
      with:
        envFile: .env.local
        expand: true

    - name: Running Linters
      run: |
        poetry run isort .

    - name: Running Tests
      env:
        DJANGO_ENV: testing
      run: poetry run pytest
