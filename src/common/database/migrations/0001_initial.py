# Generated by Django 5.0.3 on 2024-03-09 19:17

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import src.common.database.models.pending_action


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAddressORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'email',
                    models.EmailField(
                        db_index=True, max_length=254, unique=True, verbose_name='Email'
                    ),
                ),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
            ],
            options={
                'verbose_name': 'Email Address',
                'verbose_name_plural': 'Email Addresses',
                'db_table': 'email_addresses',
            },
        ),
        migrations.CreateModel(
            name='UserORM',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                (
                    'last_login',
                    models.DateTimeField(blank=True, null=True, verbose_name='last login'),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={'unique': 'A user with that username already exists.'},
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name='username',
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
                (
                    'email_address',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='database.emailaddressorm',
                        verbose_name='Email Address',
                    ),
                ),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PendingActionORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'category',
                    models.CharField(
                        choices=[
                            ('VERIFY_EMAIL', 'VERIFY_EMAIL'),
                            ('VERIFY_PHONE_NUMBER', 'VERIFY_PHONE_NUMBER'),
                            ('RESET_PASSWORD', 'RESET_PASSWORD'),
                            ('REDEEM_SESSION', 'REDEEM_SESSION'),
                        ],
                        db_index=True,
                        max_length=50,
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('PENDING', 'PENDING'),
                            ('COMPLETED', 'COMPLETED'),
                            ('EXPIRED', 'EXPIRED'),
                        ],
                        db_index=True,
                        default='PENDING',
                        max_length=50,
                    ),
                ),
                (
                    'token',
                    models.CharField(
                        db_index=True,
                        default=src.common.database.models.pending_action.generate_hex,
                        max_length=120,
                    ),
                ),
                (
                    'tracking_code',
                    models.CharField(
                        db_index=True,
                        default=src.common.database.models.pending_action.generate_hex,
                        max_length=120,
                    ),
                ),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                (
                    'usage_limit',
                    models.PositiveIntegerField(
                        default=1,
                        help_text='How many times the token can be used',
                        verbose_name='Usage Limit',
                    ),
                ),
                (
                    'usage',
                    models.PositiveIntegerField(
                        default=0,
                        help_text='How many times the token has been used',
                        verbose_name='Usage',
                    ),
                ),
                (
                    'metadata',
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text='This field changes according to the type of action',
                        verbose_name='extra',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pending_actions',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='User',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Pending Action',
                'verbose_name_plural': 'Pending Actions',
                'db_table': 'pending_actions',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumberORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'iso_code',
                    models.CharField(
                        blank=True,
                        choices=[('MX', 'MX'), ('BR', 'BR'), ('BO', 'BO'), ('XX', 'XX')],
                        max_length=3,
                        null=True,
                        verbose_name='Iso Code',
                    ),
                ),
                ('dial_code', models.SmallIntegerField(db_index=True, verbose_name='Dial Code')),
                (
                    'phone_number',
                    models.CharField(db_index=True, max_length=255, verbose_name='Phone Number'),
                ),
                (
                    'prefix',
                    models.CharField(
                        blank=True,
                        help_text='This is to solve numbers inconsistency, specially for Mexican and Brazilian numbers',
                        max_length=2,
                        null=True,
                        verbose_name='Prefix',
                    ),
                ),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified?')),
            ],
            options={
                'verbose_name': 'Phone Number',
                'verbose_name_plural': 'Phone Numbers',
                'db_table': 'phone_numbers',
                'unique_together': {('dial_code', 'phone_number')},
            },
        ),
        migrations.AddField(
            model_name='userorm',
            name='phone_number',
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='database.phonenumberorm',
                verbose_name='Phone Number',
            ),
        ),
        migrations.AddConstraint(
            model_name='userorm',
            constraint=models.UniqueConstraint(
                fields=('email_address',), name='unique_user_email_address'
            ),
        ),
        migrations.AddConstraint(
            model_name='userorm',
            constraint=models.UniqueConstraint(
                fields=('phone_number',), name='unique_user_phone_number'
            ),
        ),
    ]
